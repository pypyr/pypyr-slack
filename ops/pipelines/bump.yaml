# bumps the version number, commits the change and push to git
# run this on your dev box
# your working dir for current branch should be clean
# input context:
#   bumpLevel: major, minor, patch
#   versionFile: path to where version is kept pypyrslack/version.py
context_parser: pypyr.parser.keyvaluepairs
steps:
  - name: pypyr.steps.shell
    description: tox for build  validation and linting
    in:
      cmd: tox -e stage -- tests
  - name: pypyr.steps.safeshell
    description: create virtualenv
    in:
      cmd: virtualenv .envbump
  - name: pypyr.steps.shell
    description: |
                   Bump version number. first param is choice of: major, minor, patch
                   NOT tagging here, because tagging is happening in CI on master merge.
    in:
      versionFile: pypyrslack/version.py
      cmd: |
             . .envbump/bin/activate &&
             pip install -e .[deploy] &&
             bumpversion --no-tag  --commit ${bumpLevel} '{versionFile}' --dry-run
  - name: pypyr.steps.py
    in:
      pycode: "context['newVersion'] = pypyrslack.version.__version__"
  - name: pypyr.steps.echo
    in:
      echoMe: "New version is: ${newVersion}"
  - name: pypyr.steps.safeshell
    description: push the changes to git
    in:
      cmd: git status
  - name: pypyr.steps.safeshell
    description: get rid of virtual env
    in:
      cmd: deactivate && rm -rf .envbump
